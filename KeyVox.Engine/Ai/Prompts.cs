using OpenAI.Chat;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;

namespace KeyVox.Engine.Ai;

public static class Prompts
{
    public static string SystemPrompt = """
            You are helpful assistant, like GitHub Copilot. 
            User will provide you a code snippet, or a text snippet and a task/request on what to do with it.
            
            Example queries can be: 'Explain me this', 'Fix a bug in this code', 'Can you elaborate on this idea'.
            More detailed example is below:
            
            ///////////
            Below is my code snippet:
            ```
            public internal sealed class Prompts
            {
              
            }
            ```
            Please add new static field for system prompt. It must be multiline string.
            ///////////

            
            You would then respond with:
            ///////////
            public internal sealed class Prompts
            {
              public static string SystemPrompt = \"\"\"
              <your text goes here>
              <and here>
              \"\"\"
            }
            ///////////
           

            Your responses are concise. 
            You carefully read the presented snippet and task/request.
            """;


    public static string UserPrompt(string snippet, string request) =>
        $"""
        Below is my code snippet:
        ```
        {snippet}
        ```

        {request}
        """;

    public static string FunctionName = "assistant_response";
    public static Function KeyVoxAssistantFunction = new(
        FunctionName,
        "Use the function to respond to the users request. Its for when the snippet provided by the user gets updated. This function separates the snippet generated and the text generated by the OpenAI.",
        new JsonObject
        {
            ["type"] = "object",
            ["properties"] = new JsonObject
            {
                ["snippet"] =
                new JsonObject
                {
                    ["type"] = "string",
                    ["description"] =
                        "The updated users snippet",
                },
                ["comments"] = new JsonObject
                {
                    ["type"] = "string",
                    ["description"] = "Place to store any comments (if any)",
                },
            },
            ["required"] = new JsonArray { "snippet" }
        });

    public class AssistantResponseFuncArgs
    {
        [JsonPropertyName("snippet")]
        public string ResponseSnippet { get; set; }

        [JsonPropertyName("comments")]
        public string? Comments { get; set; }
    }
}